// Программа демонстрирует разницу в порядке итерации между LinkedHashMap и HashMap.
// Создается LinkedHashMap linkmap, в котором элементы добавляются в порядке их вставки:
// 11: "один один"
// 1: "два"
// 2: "один"
// При выводе linkmap порядок элементов сохраняется в соответствии с порядком вставки.
// Создается HashMap map, в котором элементы добавляются в произвольном порядке:
// 11: "один один"
// 2: "два"
// 1: "один"
// При выводе map порядок элементов может быть другим, так как HashMap не гарантирует порядок элементов при итерации.
// Поэтому вывод программы будет следующим:
// {11=один один, 1=два, 2=один}
// {1=один, 2=два, 11=один один}
// Первый вывод отображает порядок элементов, как он был вставлен в LinkedHashMap, 
// в то время как второй вывод показывает элементы HashMap, которые могут быть переупорядочены при итерации.


import java.util.*;

public class MyLinkedHashMap {
    public static void main(String[] args) {
        Map<Integer,String> linkmap = new LinkedHashMap<>();
        linkmap.put(11, "один один");
        linkmap.put(1, "два");
        linkmap.put(2, "один");
        System.out.println(linkmap); // {11=один один, 1=два, 2=один}
        Map<Integer,String> map = new HashMap<>();
        map.put(11, "один один");
        map.put(2, "два");
        map.put(1, "один");
        System.out.println(map); // {1=один, 2=два, 11=один один}
    }
}
